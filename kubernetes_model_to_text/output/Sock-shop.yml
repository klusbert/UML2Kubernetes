---
kind: Namespace
apiVersion: v1
metadata:
  name: sock-shop
  labels:
    name: sock-shop

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-end
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers:
        - name: front-end
          image: weaveworksdemos/front-end:0.3.12
          ports:
            - containerPort: 8079
          env:
            - name: SESSION_REDIS
              value: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - all             
            readOnlyRootFilesystem: true

---
kind: Service
apiVersion: v1
metadata:
  name: front-end
  namespace: sock-shop
spec:
  selector:
    app: front-end
  type: LoadBalancer
  ports:  
    - port: 80
      protocol: TCP     
      targetPort: 8079




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: carts
  template:
    metadata:
      labels:
        app: carts
    spec:
      volumes:
       - name: temp-volume
         emptyDir: 
           medium: Memory
      containers:
        - name: carts
          image: weaveworksdemos/carts:0.4.8
          ports:
            - containerPort: 80
          env:
            - name: JAVA_OPTS
              value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - all             
              add:
                - NET_BIND_SERVICE             
            readOnlyRootFilesystem: true
          resources:
            limits:
              cpu: 300m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - mountPath: /tmp
              name: temp-volume					

---
apiVersion: v1
kind: Service
metadata:
  name: carts
  namespace: sock-shop
spec:  
  ports:
    - port: 80        
      protocol: TCP
      targetPort: 80
  selector:
    app: carts




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalogue
  template:
    metadata:
      labels:
        app: catalogue
    spec:
      containers:
        - name: catalogue
          image: weaveworksdemos/catalogue:0.3.5
          command: ["/app"]
          args: ["-port=80"]
          ports:
            - containerPort: 80
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - all             
              add:
                - NET_BIND_SERVICE             
            readOnlyRootFilesystem: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
  namespace: sock-shop
spec:  
  ports:
    - port: 80        
      protocol: TCP
      targetPort: 80
  selector:
    app: catalogue




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue-db
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalogue-db
  template:
    metadata:
      labels:
        app: catalogue-db
    spec:
      containers:
        - name: catalogue-db
          image:  weaveworksdemos/catalogue-db:0.3.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_DATABASE
              value: socksdb
            - name: MYSQL_ROOT_PASSWORD
              value: fake_password

---
apiVersion: v1
kind: Service
metadata:
  name: catalogue-db
  namespace: sock-shop
spec:  
  ports:
    - port: 3306        
      protocol: TCP
      targetPort: 3306
  selector:
    app: catalogue-db




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
    spec:
      volumes:
       - name: temp-volume
         emptyDir: 
           medium: Memory
      containers:
        - name: orders
          image: weaveworksdemos/orders:0.4.7
          ports:
            - containerPort: 80
          env:
            - name: JAVA_OPTS
              value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - all             
              add:
                - NET_BIND_SERVICE             
            readOnlyRootFilesystem: true
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 300Mi
          volumeMounts:
            - mountPath: /tmp
              name: temp-volume					

---
apiVersion: v1
kind: Service
metadata:
  name: orders
  namespace: sock-shop
spec:  
  ports:
    - port: 80        
      protocol: TCP
      targetPort: 80
  selector:
    app: orders




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-db
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders-db
  template:
    metadata:
      labels:
        app: orders-db
    spec:
      volumes:
       - name: temp-volume
         emptyDir: 
           medium: Memory
      containers:
        - name: orders-db
          image: mongo
          ports:
            - containerPort: 27017
          securityContext:
            runAsNonRoot: false
            capabilities:
              drop:
                - all             
              add:
                - CHOWN             
                - SETGID             
                - SETUID             
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /tmp
              name: temp-volume					

---
apiVersion: v1
kind: Service
metadata:
  name: orders-db
  namespace: sock-shop
spec:  
  ports:
    - port: 27017        
      protocol: TCP
      targetPort: 27017
  selector:
    app: orders-db




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment
  template:
    metadata:
      labels:
        app: payment
    spec:
      containers:
        - name: payment
          image: weaveworksdemos/payment:0.4.3
          ports:
            - containerPort: 80
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - all             
              add:
                - NET_BIND_SERVICE             
            readOnlyRootFilesystem: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 90m
              memory: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  name: payment
  namespace: sock-shop
spec:  
  ports:
    - port: 80        
      protocol: TCP
      targetPort: 80
  selector:
    app: payment




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts-db
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: carts-db
  template:
    metadata:
      labels:
        app: carts-db
    spec:
      volumes:
       - name: temp-volume
         emptyDir: 
           medium: Memory
      containers:
        - name: carts-db
          image: mongo
          ports:
            - containerPort: 27017
          securityContext:
            runAsNonRoot: false
            capabilities:
              drop:
                - all             
              add:
                - CHOWN             
                - SETGID             
                - SETUID             
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /tmp
              name: temp-volume					

---
apiVersion: v1
kind: Service
metadata:
  name: carts-db
  namespace: sock-shop
spec:  
  ports:
    - port: 27017        
      protocol: TCP
      targetPort: 27017
  selector:
    app: carts-db




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue-master
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue-master
  template:
    metadata:
      labels:
        app: queue-master
    spec:
      containers:
        - name: queue-master
          image: weaveworksdemos/queue-master:0.3.1
          ports:
            - containerPort: 80
          env:
            - name: JAVA_OPTS
              value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
          resources:
            limits:
              cpu: 300m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 300Mi

---
apiVersion: v1
kind: Service
metadata:
  name: queue-master
  namespace: sock-shop
spec:  
  ports:
    - port: 80        
      protocol: TCP
      targetPort: 80
  selector:
    app: queue-master




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shipping
  template:
    metadata:
      labels:
        app: shipping
    spec:
      volumes:
       - name: temp-volume
         emptyDir: 
           medium: Memory
      containers:
        - name: shipping
          image: weaveworksdemos/shipping:0.4.8
          ports:
            - containerPort: 80
          env:
            - name: JAVA_OPTS
              value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
            - name: ZIPKIN
              value: zipkin.jaeger.svc.cluster.local
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - all             
              add:
                - NET_BIND_SERVICE             
            readOnlyRootFilesystem: true
          resources:
            limits:
              cpu: 300m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 300Mi
          volumeMounts:
            - mountPath: /tmp
              name: temp-volume					

---
apiVersion: v1
kind: Service
metadata:
  name: shipping
  namespace: sock-shop
spec:  
  ports:
    - port: 80        
      protocol: TCP
      targetPort: 80
  selector:
    app: shipping




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.6.8-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
              name: management
          securityContext:
            runAsNonRoot: false
            capabilities:
              drop:
                - all             
              add:
                - CHOWN             
                - SETGID             
                - SETUID             
                - DAC_OVERRIDE             
            readOnlyRootFilesystem: true

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: sock-shop
spec:  
  ports:
    - port: 5672        
      protocol: TCP
      targetPort: 5672
  selector:
    app: rabbitmq




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user
  template:
    metadata:
      labels:
        app: user
    spec:
      containers:
        - name: user
          image: weaveworksdemos/user:0.4.7
          ports:
            - containerPort: 80
          env:
            - name: mongo
              value: user-db:27017
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - all             
              add:
                - NET_BIND_SERVICE             
            readOnlyRootFilesystem: true
          resources:
            limits:
              cpu: 300m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  name: user
  namespace: sock-shop
spec:  
  ports:
    - port: 80        
      protocol: TCP
      targetPort: 80
  selector:
    app: user




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-db
  template:
    metadata:
      labels:
        app: user-db
    spec:
      volumes:
       - name: temp-volume
         emptyDir: 
           medium: Memory
      containers:
        - name: user-db
          image: weaveworksdemos/user-db:0.3.0
          ports:
            - containerPort: 27017
          securityContext:
            runAsNonRoot: false
            capabilities:
              drop:
                - all             
              add:
                - CHOWN             
                - SETGID             
                - SETUID             
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /tmp
              name: temp-volume					

---
apiVersion: v1
kind: Service
metadata:
  name: user-db
  namespace: sock-shop
spec:  
  ports:
    - port: 27017        
      protocol: TCP
      targetPort: 27017
  selector:
    app: user-db




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: session-db
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: session-db
  template:
    metadata:
      labels:
        app: session-db
    spec:
      containers:
        - name: session-db
          image: redis:alpine
          ports:
            - containerPort: 6379
          securityContext:
            runAsNonRoot: false
            capabilities:
              drop:
                - all             
              add:
                - CHOWN             
                - SETGID             
                - SETUID             
            readOnlyRootFilesystem: true

---
apiVersion: v1
kind: Service
metadata:
  name: session-db
  namespace: sock-shop
spec:  
  ports:
    - port: 6379        
      protocol: TCP
      targetPort: 6379
  selector:
    app: session-db








