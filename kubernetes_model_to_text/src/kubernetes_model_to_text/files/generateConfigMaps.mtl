[comment encoding = UTF-8 /]
[module generateConfigMaps('http://www.example.org/kubernetesModel')]
[import kubernetes_model_to_text::requests::generateJavaExtensions/]


[template public generateConfigMaps(anInfrastructure : Infrastructure)]

[for (configMap: ConfigMap | anInfrastructure.configMaps)]
[file (padZeros(configMap.id) +'-' +configMap.name +'.yml', false, 'UTF-8')]
[if (configMap.isSecret)]
---
apiVersion: v1
kind: Secret
metadata:
  name: [configMap.name.toLowerCase()/]
  namespace: [anInfrastructure.namespace.toLowerCase()/]
stringData:
 [for (envar: EnviromentVariables | configMap.data)]
  [envar.name/]: [replaceVariables(envar.value)/]
 [/for]
[if (configMap.fileName.replaceAll('"', '').size() > 0)]
	[for (envar: EnviromentVariables | getEnVarsFromDisk(configMap.fileName))]
		[envar.name/]
	[/for]
[/if]
[else]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: [configMap.name.toLowerCase()/]
  namespace: [anInfrastructure.namespace.toLowerCase()/]
data:
 [for (envar: EnviromentVariables | configMap.data)]
  [envar.name/]: [replaceVariables(envar.value)/]
 [/for]
[/if]
[comment if filePaht exist return a list of envira/]

[/file]
[/for]

[/template]
