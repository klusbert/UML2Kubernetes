---
kind: Namespace
apiVersion: v1
metadata:
  name: uml
  labels:
    name: uml

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin
  namespace: uml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      containers:
        - name: phpmyadmin
          image: phpmyadmin/phpmyadmin
          ports:
            - containerPort: 80
          env:
            - name: PMA_HOST
              value: mysql.uml.svc.cluster.local
            - name: MYSQL_ROOT_PASSWORD
              value: password


---
kind: Service
apiVersion: v1
metadata:
  name: phpmyadmin
  namespace: uml
spec:
  selector:
    app: phpmyadmin
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 80




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: uml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      volumes:
       - name: wordpress-persistent-storage
         persistentVolumeClaim:
           claimName: wordpress-pvc
      containers:
        - name: wordpress
          image: wordpress
          ports:
            - containerPort: 80
          env:
            - name: WORDPRESS_DB_NAME
              value: wordpress
            - name: WORDPRESS_DB_PASSWORD
              value: password
            - name: WORDPRESS_DB_HOST
              value: mysql.uml.svc.cluster.local
            - name: WORDPRESS_DB_USER
              value: root
          volumeMounts:
            - name: wordpress-persistent-storage
              mountPath: /var/www/html
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: wordpress-pvc
  namespace: uml
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi


---
kind: Service
apiVersion: v1
metadata:
  name: wordpress
  namespace: uml
spec:
  selector:
    app: wordpress
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 80




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: uml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      volumes:
       - name: mysql-persistent-storage
         persistentVolumeClaim:
           claimName: mysql-pvc
      containers:
        - name: mysql
          image: mysql:8.0.28
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_DATABASE
              value: wordpress
            - name: MYSQL_ROOT_PASSWORD
              value: password
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-pvc
  namespace: uml
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi


---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: uml
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  selector:
    app: mysql




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: uml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      volumes:
       - name: mongo-persistent-storage
         persistentVolumeClaim:
           claimName: mongo-pvc
      containers:
        - name: mongo
          image: mongo
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: password
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-pvc
  namespace: uml
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi


---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: uml
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  selector:
    app: mongo




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongoexpress
  namespace: uml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongoexpress
  template:
    metadata:
      labels:
        app: mongoexpress
    spec:
      containers:
        - name: mongoexpress
          image: mongo-express
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: password
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: root
            - name: ME_CONFIG_MONGODB_URL
              value: mongodb://root:password@mongo.uml.svc.cluster.local:27017/


---
kind: Service
apiVersion: v1
metadata:
  name: mongoexpress
  namespace: uml
spec:
  selector:
    app: mongoexpress
  type: NodePort
  ports:
    - name: http
      port: 8081
      targetPort: 8081




---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mongoexpress-ingress
  namespace: uml
spec:
  rules:
  - http:
      paths:
      - path: /asd
        backend:
          service:
            name: mongoexpress
            port:
              number: 8081
        pathType: Exact




